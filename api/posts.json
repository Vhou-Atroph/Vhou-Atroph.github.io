[
    {
        "title": "Hello, world!",
        "id": "2022/hello_world",
        "date": "April 27, 2022",
        "content": "<p>Hello, World!</p>",
        "content_preview": "Hello, World!",
        "image_preview": null
    },
    {
        "title": "Concerning TT-Damage-Calculator V4.0.0",
        "id": "2022/gag_calculator_v4",
        "date": "September 28, 2022",
        "content": "<p>Hey there! This post is for anyone that may be a user of TT-Damage-Calculator and is confused or concerned about the changes for V4.0.0, which is very understandable! Throwing in a new language that needs to be compiled to a PYD or SO feels bizarre, especially since I don't really have a central communication channel that I use very often. I hope after reading this post it makes a little more sense why I've made these changes, and how TT-Damage-Calculator may continue to change in the future.</p><h2>Future Executable Releases</h2><p>This is positive news for people who primarily use the executable release version of the gag calculator: With the changes I've made to the source code, I'm going to try to compile it more often so that people who do not want to compile Rust code will still be able to use newer versions of the calculator. There's already a release for V4.0.0-dev.1 if you want to <a href='https://github.com/Vhou-Atroph/TT-Damage-Calculator/releases/tag/V4.0.0-dev.1'>check it out!</a></p><p>Fundamnetally, nothing will change with the executable releases of the calculator- you'll still be able to use them like you always have been!</p><h2>Why Rust?</h2><p>Ultimately, it's because I like Rust more than Python. I could sing all the praises of Rust that have ever been written (blazingly fast ðŸš€ðŸš€) but the core reason I have chosen to rewrite most modules in Rust instead of keeping them in Python is purely because I like the language more. Rust is just more fun to program in, and when it compiles it runs perfectly.</p><p>Rust has been influencing my programming style more and more as of late, (It is also the language I have mostly been using as of late. This is probably related.) so I figured it would be a good idea for me to just port modules into Rust for better performance and easier maintainability. As I continue to move functions into Rust, my highest hope is that the program becomes less of the spaghetti mess it has been since I first made the program almost a year ago.</p><h2>How do I compile the Rust libraries?</h2><h3>Prerequisites</h3><p>The first step to compiling Rust is downloading it. <a href='https://www.rust-lang.org/'>You can download Rust on their website.</a> Click the \"Get Started\" button and follow the install instructions depending on what operating system you are running. Once Rust is installed, follow the build instructions below for your system.</p><h3>Windows Build Instructions</h3><p>On Windows, open your favorite terminal and navigate to the project directory of one of the Rust libraries. For the tt_calc library, this should be <code>TT-Damage-Calculator/mod/tt_calc/</code>. The folder should have two files: Another folder named <code>src</code> and a <code>Cargo.toml</code> file. Inside this folder, run the command <code>cargo build --release</code>. The library should begin to compile.</p><p>Once the library has finished compiling, you should notice that a new folder has been created in the main project folder: <code>target</code>. Open this folder, and then the <code>release</code> folder inside. Within the <code>release</code> folder, you should find a file named <code>[library].dll</code>. For tt_calc, this would be <code>tt_calc.dll</code>. Change the file's extension to <code>.pyd</code> instead of <code>.dll</code>. The file's name should now be <code>[library].pyd</code>. Once this is the case, drag and drop your new <code>.pyd</code> file into <code>TT-Damage-Calculator/mod</code>. Once this is done with each library, the program should run normally.</p><h3>Linux Build Instructions</h3><p>On Linux, open your favorite terminal and navigate to the project directory of one of the Rust libraries. For the tt_calc library, this should be <code>TT-Damage-Calculator/mod/tt_calc/</code>. The folder should have two files: Another folder named <code>src</code> and a <code>Cargo.toml</code> file. Inside this folder, run the command <code>cargo build --release</code>. The library should begin to compile.</p><p>Once the library has finished compiling, you should notice that a new folder has been created in the main project folder: <code>target</code>. Open this folder, and then the <code>release</code> folder inside. Within the <code>release</code> folder, you should find a file named <code>lib[library].so</code>. For tt_calc, this would be <code>libtt_calc.so</code>. Change the file's name to <code>[library].so</code>. For tt_calc, this would be <code>tt_calc.so</code>. Once this is the case, drag and drop your new <code>.so</code> file into <code>TT-Damage-Calculator/mod</code>. Once this is done with each library, the program should run normally.</p><h2>What else is happening for V4.0.0?</h2><p>Not much, yet. I don't know how many new features I want to add until I'm happy with what the program already has.</p><p>One thing I am looking at doing is making v2 calculations better. I may add a dropdown to the menu bar that lets you select a v2 level to calculate damage against. There would still be the option of a toggle if that is preferred instead. It's possible I would move certain other functions (like defense and the def/lure lock) to the menu bar as well, but this would be more likely to happen in V4.1.0.</p><h2>What's beyond V4.0.0?</h2><p>The most important feature that I haven't worked on at all is the ability to change the calculator's keybinds within the program itself rather than doing it through settings.toml. Before any other major features are added, I'd like to finally get around to this.</p><p>Beyond that, I'd like to add themes. Maybe not the most important of features, but I like being able to customize software. Being able to customize the appearance of the gag calculator feels like a cute idea that would allow people to add a bit of their personality to the program while they use it.</p><h2>Final Notes</h2><p>I'm very glad people have found great utility in my program over the short time it has existed, and hope you continue to do so! Thank you for downloading!</p>",
        "content_preview": "Hey there! This post is for anyone that may be a user of TT-Damage-Calculator and is confused or concerned about the changes for V4.0.0, which is very understandable!",
        "image_preview": null
    },
    {
        "title": "A Site Redesign",
        "id": "2023/redesign",
        "date": "March 24, 2022",
        "content": "<p>Hello World, once again! The Vhou-Atroph site has received a bit of a redesign. As I am not a web designer, it is very likely not the prettiest site you will look at. But it is purple and purple is my favorite color, so it makes me happy. :)</p><p>Though the site was barren before, (and kind of still is!) I still had to do some cleaning up. The most important thing here is that the programs API is no longer active. Yes, this existed. It was used as a master file to verify the latest version of every program I made. However, it was a bit of a mess and difficult to use, so it has been removed. I should also add in here that there is a posts API found at <a href=\"https://vhou-atroph.github.com/api/posts.json\">https://vhou-atroph.github.com/api/posts.json</a> that holds every blog post on the site. Maybe that'll see some use eventually!</p><p>For fans of learning about other people, I have actually added information about me on the about page. Very cool! Also, I decided to replace what were previously plain text links with images instead. It looks nicer, at least in my opinion. Sorry if it doesn't I guess.</p><p>Since it's important to have information about what I have made in a readily available place, there's a section on the home page for my various projects now. Not every project I make is going to go there- just the really cool important ones. This might move somewhere else some day if I ever do anything hugely important with the homepage. My only fear is having to also update all the navbars if this does happen.</p><p>So uh, that's all for now. I'll probably make another blog post eventually. If I didn't it'd be really funny to have this slight redesign be the last change to the website, but I'm fairly confident another blog post will exist here eventually.</p>",
        "content_preview": "Hello World, once again! The Vhou-Atroph site has received a bit of a redesign.",
        "image_preview": null
    }
]